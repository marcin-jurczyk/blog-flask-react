{"ast":null,"code":"import { createContext } from 'react';\nimport { API, setAuthHeaders } from \"./api\";\nimport jwt_decode from 'jwt-decode';\nimport { message } from \"antd\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport const loginAutomatically = () => {\n  const token = localStorage.getItem('token');\n  if (token === 'undefined') return false;\n  if (!token) return false;\n  const decoded = jwt_decode(token);\n  const now = Date.now() / 1000;\n\n  if (decoded.exp > now) {\n    setAuthHeaders(token);\n    return true;\n  }\n\n  return false;\n};\nexport const login = (token, avatar) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('avatar', avatar);\n  setAuthHeaders(token);\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('avatar');\n  setAuthHeaders(null);\n  window.location.reload();\n};\nexport const getUserInfo = email => {\n  API.get(`/auth/email/${email}`).then(response => {\n    console.log(response.data);\n    return response.data;\n  }).catch(errInfo => {\n    message.error(errInfo);\n  });\n};\nexport const getLogin = () => {\n  const token = localStorage.getItem('token');\n  if (token === 'undefined') return false;\n  if (!token) return false;\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace('-', '+').replace('_', '/');\n  return JSON.parse(window.atob(base64)).sub;\n};","map":{"version":3,"sources":["/Users/marcin/Desktop/flask-react-blog/frontend/src/services/user.js"],"names":["createContext","API","setAuthHeaders","jwt_decode","message","UserContext","loginAutomatically","token","localStorage","getItem","decoded","now","Date","exp","login","avatar","setItem","logout","removeItem","window","location","reload","getUserInfo","email","get","then","response","console","log","data","catch","errInfo","error","getLogin","base64Url","split","base64","replace","JSON","parse","atob","sub"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,OAA5B;AACA,SAAQC,GAAR,EAAaC,cAAb,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAD,CAAjC;AAEP,OAAO,MAAMM,kBAAkB,GAAG,MAAM;AACpC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAIF,KAAK,KAAK,WAAd,EAA2B,OAAO,KAAP;AAC3B,MAAG,CAACA,KAAJ,EAAW,OAAO,KAAP;AAEX,QAAMG,OAAO,GAAGP,UAAU,CAACI,KAAD,CAA1B;AACA,QAAMI,GAAG,GAAGC,IAAI,CAACD,GAAL,KAAW,IAAvB;;AACA,MAAGD,OAAO,CAACG,GAAR,GAAcF,GAAjB,EAAqB;AACjBT,IAAAA,cAAc,CAACK,KAAD,CAAd;AACA,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH,CAbM;AAeP,OAAO,MAAMO,KAAK,GAAG,CAACP,KAAD,EAAQQ,MAAR,KAAmB;AACpCP,EAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BT,KAA9B;AACAC,EAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BD,MAA/B;AACAb,EAAAA,cAAc,CAACK,KAAD,CAAd;AACH,CAJM;AAMP,OAAO,MAAMU,MAAM,GAAG,MAAM;AACxBT,EAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACAV,EAAAA,YAAY,CAACU,UAAb,CAAwB,QAAxB;AACAhB,EAAAA,cAAc,CAAC,IAAD,CAAd;AACAiB,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,CALM;AAOP,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClCtB,EAAAA,GAAG,CAACuB,GAAJ,CAAS,eAAcD,KAAM,EAA7B,EACKE,IADL,CACUC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,WAAOH,QAAQ,CAACG,IAAhB;AACP,GAJD,EAIGC,KAJH,CAIUC,OAAD,IAAa;AAClB3B,IAAAA,OAAO,CAAC4B,KAAR,CAAcD,OAAd;AACH,GAND;AAOH,CARM;AAUP,OAAO,MAAME,QAAQ,GAAG,MAAM;AAC1B,QAAM1B,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAIF,KAAK,KAAK,WAAd,EAA2B,OAAO,KAAP;AAC3B,MAAI,CAACA,KAAL,EAAY,OAAO,KAAP;AACZ,QAAM2B,SAAS,GAAG3B,KAAK,CAAC4B,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAlB;AACA,QAAMC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4BA,OAA5B,CAAoC,GAApC,EAAyC,GAAzC,CAAf;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWpB,MAAM,CAACqB,IAAP,CAAYJ,MAAZ,CAAX,EAAgCK,GAAvC;AACH,CAPM","sourcesContent":["import {createContext} from 'react'\nimport {API, setAuthHeaders} from \"./api\";\nimport jwt_decode from 'jwt-decode'\nimport {message} from \"antd\";\n\nexport const UserContext = createContext(null);\n\nexport const loginAutomatically = () => {\n    const token = localStorage.getItem('token');\n    if (token === 'undefined') return false;\n    if(!token) return false;\n\n    const decoded = jwt_decode(token);\n    const now = Date.now()/1000;\n    if(decoded.exp > now){\n        setAuthHeaders(token);\n        return true;\n    }\n\n    return false;\n};\n\nexport const login = (token, avatar) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('avatar', avatar);\n    setAuthHeaders(token);\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('avatar');\n    setAuthHeaders(null);\n    window.location.reload();\n};\n\nexport const getUserInfo = (email) => {\n    API.get(`/auth/email/${email}`)\n        .then(response => {\n            console.log(response.data)\n            return response.data;\n    }).catch((errInfo) => {\n        message.error(errInfo);\n    })\n}\n\nexport const getLogin = () => {\n    const token = localStorage.getItem('token');\n    if (token === 'undefined') return false;\n    if (!token) return false;\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace('-', '+').replace('_', '/');\n    return JSON.parse(window.atob(base64)).sub;\n};"]},"metadata":{},"sourceType":"module"}