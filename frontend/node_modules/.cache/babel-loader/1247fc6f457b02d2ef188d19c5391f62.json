{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/flask-react-blog/frontend/src/components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { NotLogged } from \"../../views/NotLogged\";\nimport { Post } from \"./Post/Post\";\nimport { API } from \"../../services/api\";\nimport { List } from \"antd\";\nimport './layout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    _id: {\n      $oid: \"000\"\n    },\n    title: 'Template title',\n    body: 'Template body',\n    author: {\n      $oid: \"000\"\n    },\n    comments: [],\n    createdAt: {\n      $date: \"000\"\n    },\n    modified: false,\n    lastModifyAt: {\n      $date: \"000\"\n    }\n  }]);\n  useEffect(() => {\n    API.get(\"/post/all\").then(response => {\n      const sorted = response.data.sort((a, b) => b.createdAt.$date - a.createdAt.$date);\n      setPosts(sorted);\n    }).catch(errInfo => console.error(errInfo));\n  }, []);\n  console.log(posts);\n\n  if (posts === undefined || posts === [] || posts === null) {\n    return /*#__PURE__*/_jsxDEV(NotLogged, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(NotLogged, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          pageStart: 0,\n          loadMore: loadFunc,\n          hasMore: true || false,\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader\",\n            children: \"Loading ...\"\n          }, 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this),\n          useWindow: false,\n          getScrollParent: () => this.scrollParentRef,\n          children: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Home, \"Lk+88I5L7nZ/E+wqHjPqhq3/NQM=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/marcin/Desktop/flask-react-blog/frontend/src/components/Home/Home.js"],"names":["React","useEffect","useState","NotLogged","Post","API","List","Home","posts","setPosts","_id","$oid","title","body","author","comments","createdAt","$date","modified","lastModifyAt","get","then","response","sorted","data","sort","a","b","catch","errInfo","console","error","log","undefined","loadFunc","scrollParentRef","items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,GAAR,QAAkB,oBAAlB;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAO,cAAP;;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAC;AAChCQ,IAAAA,GAAG,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAD2B;AAEhCC,IAAAA,KAAK,EAAE,gBAFyB;AAGhCC,IAAAA,IAAI,EAAE,eAH0B;AAIhCC,IAAAA,MAAM,EAAE;AAACH,MAAAA,IAAI,EAAE;AAAP,KAJwB;AAKhCI,IAAAA,QAAQ,EAAE,EALsB;AAMhCC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KANqB;AAOhCC,IAAAA,QAAQ,EAAE,KAPsB;AAQhCC,IAAAA,YAAY,EAAE;AAACF,MAAAA,KAAK,EAAE;AAAR;AARkB,GAAD,CAAD,CAAlC;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,GAAG,CAACe,GAAJ,CAAQ,WAAR,EACKC,IADL,CACWC,QAAD,IAAc;AAChB,YAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACX,SAAF,CAAYC,KAAZ,GAAoBS,CAAC,CAACV,SAAF,CAAYC,KAA7D,CAAf;AACAR,MAAAA,QAAQ,CAACc,MAAD,CAAR;AACH,KAJL,EAKKK,KALL,CAKWC,OAAO,IAAIC,OAAO,CAACC,KAAR,CAAcF,OAAd,CALtB;AAMH,GAPQ,EAON,EAPM,CAAT;AAQAC,EAAAA,OAAO,CAACE,GAAR,CAAYxB,KAAZ;;AAEA,MAAIA,KAAK,KAAKyB,SAAV,IAAuBzB,KAAK,KAAK,EAAjC,IAAuCA,KAAK,KAAK,IAArD,EAA0D;AACtD,wBACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAKK;AACD,wBACI,QAAC,SAAD;AAAA,6BACI;AAAA,+BACI,QAAC,cAAD;AACI,UAAA,SAAS,EAAE,CADf;AAEI,UAAA,QAAQ,EAAE0B,QAFd;AAGI,UAAA,OAAO,EAAE,QAAQ,KAHrB;AAII,UAAA,MAAM,eAAE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA,aAA6B,CAA7B;AAAA;AAAA;AAAA;AAAA,kBAJZ;AAKI,UAAA,SAAS,EAAE,KALf;AAMI,UAAA,eAAe,EAAE,MAAM,KAAKC,eANhC;AAAA,oBAQKC;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;AACJ,CAxDM;;GAAM7B,I;;KAAAA,I","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {NotLogged} from \"../../views/NotLogged\";\nimport {Post} from \"./Post/Post\";\nimport {API} from \"../../services/api\";\nimport {List} from \"antd\";\nimport './layout.css'\n\n\nexport const Home = () => {\n\n    const [posts, setPosts] = useState([{\n        _id: {$oid: \"000\"},\n        title: 'Template title',\n        body: 'Template body',\n        author: {$oid: \"000\"},\n        comments: [],\n        createdAt: {$date: \"000\"},\n        modified: false,\n        lastModifyAt: {$date: \"000\"},\n    }])\n\n    useEffect(() => {\n        API.get(\"/post/all\")\n            .then((response) => {\n                const sorted = response.data.sort((a, b) => b.createdAt.$date - a.createdAt.$date)\n                setPosts(sorted)\n            })\n            .catch(errInfo => console.error(errInfo))\n    }, []);\n    console.log(posts)\n\n    if (posts === undefined || posts === [] || posts === null){\n        return (\n            <NotLogged/>\n        )\n    }\n    else {\n        return (\n            <NotLogged>\n                <div>\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={loadFunc}\n                        hasMore={true || false}\n                        loader={<div className=\"loader\" key={0}>Loading ...</div>}\n                        useWindow={false}\n                        getScrollParent={() => this.scrollParentRef}\n                    >\n                        {items}\n                    </InfiniteScroll>\n                </div>\n                {/*<List*/}\n                {/*    dataSource={posts}*/}\n                {/*    renderItem={post => (*/}\n                {/*            <Post*/}\n                {/*                title={post.title}*/}\n                {/*                date={post.createdAt.$date}*/}\n                {/*                body={post.body}*/}\n                {/*            />*/}\n                {/*            )}*/}\n                {/*/>*/}\n            </NotLogged>\n        );\n    }\n};"]},"metadata":{},"sourceType":"module"}