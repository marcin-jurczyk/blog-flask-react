{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/flask-react-blog/frontend/src/components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NotLogged } from \"../../views/NotLogged\";\nimport './layout.css';\nimport { gradient } from \"../../services/gradient\";\nimport { Post } from \"./Post/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const bgGradient = {\n    background: gradient(randomString(18), randomType(), 1)\n  };\n  const bgGradient2 = {\n    background: gradient(randomString(18), randomType(), 1)\n  };\n  useEffect(() => {\n    API.get(\"/post/all\").then(response => {}).catch(errInfo => console.error(errInfo));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(NotLogged, {\n    children: /*#__PURE__*/_jsxDEV(Post, {\n      bgGradient: bgGradient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Home;\n\nfunction randomString(length) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n\nfunction randomType() {\n  const words = [\"diagonal\", \"vertical\", \"horizontal\", \"radial\"];\n  return words[Math.floor(Math.random() * words.length)];\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/marcin/Desktop/flask-react-blog/frontend/src/components/Home/Home.js"],"names":["React","NotLogged","gradient","Post","Home","bgGradient","background","randomString","randomType","bgGradient2","useEffect","API","get","then","response","catch","errInfo","console","error","length","result","characters","charactersLength","i","charAt","Math","floor","random","words"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AAGA,OAAO,cAAP;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,SAAQC,IAAR,QAAmB,aAAnB;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB,QAAMC,UAAU,GAAG;AAAEC,IAAAA,UAAU,EAAEJ,QAAQ,CAACK,YAAY,CAAC,EAAD,CAAb,EAAmBC,UAAU,EAA7B,EAAiC,CAAjC;AAAtB,GAAnB;AACA,QAAMC,WAAW,GAAG;AAAEH,IAAAA,UAAU,EAAEJ,QAAQ,CAACK,YAAY,CAAC,EAAD,CAAb,EAAmBC,UAAU,EAA7B,EAAiC,CAAjC;AAAtB,GAApB;AAKAE,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EACKC,IADL,CACWC,QAAD,IAAc,CAEnB,CAHL,EAIKC,KAJL,CAIWC,OAAO,IAAIC,OAAO,CAACC,KAAR,CAAcF,OAAd,CAJtB;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,UAAU,EAAIX;AADlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvCM;;GAAMD,I;;KAAAA,I;;AA0Cb,SAASG,YAAT,CAAsBY,MAAtB,EAA8B;AAC1B,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,UAAU,GAAG,gEAAnB;AACA,QAAMC,gBAAgB,GAAGD,UAAU,CAACF,MAApC;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC7BH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACH;;AACD,SAAOF,MAAP;AACH;;AAED,SAASZ,UAAT,GAAsB;AAClB,QAAMoB,KAAK,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,EAAuC,QAAvC,CAAd;AACA,SAAOA,KAAK,CAACH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,KAAK,CAACT,MAAjC,CAAD,CAAZ;AACH","sourcesContent":["import React from 'react'\nimport {NotLogged} from \"../../views/NotLogged\";\n\n\nimport './layout.css'\nimport {gradient} from \"../../services/gradient\";\nimport {Post} from \"./Post/Post\";\n\nexport const Home = () => {\n\n    const bgGradient = { background: gradient(randomString(18), randomType(), 1)}\n    const bgGradient2 = { background: gradient(randomString(18), randomType(), 1) }\n\n    \n\n\n    useEffect(() => {\n        API.get(\"/post/all\")\n            .then((response) => {\n\n            })\n            .catch(errInfo => console.error(errInfo))\n    }, []);\n\n    return (\n        <NotLogged>\n            <Post\n                bgGradient = {bgGradient}\n            />\n            {/*<div className=\"home-container\">*/}\n            {/*    <div className=\"post\" style={bgGradient}>*/}\n            {/*        <time className=\"time\" dateTime=\"2019-05-31\">*/}\n            {/*            <span className=\"news__day\">31</span>*/}\n            {/*            <span className=\"news__year\">May 2019</span>*/}\n            {/*        </time>*/}\n            {/*        Post 1*/}\n            {/*    </div>*/}\n            {/*    <div className=\"post\" style={bgGradient2}>*/}\n            {/*        <time className=\"time\" dateTime=\"2019-05-31\">*/}\n            {/*            <span className=\"news__day\">31</span>*/}\n            {/*            <span className=\"news__year\">May 2019</span>*/}\n            {/*        </time>*/}\n            {/*        Post 1*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n        </NotLogged>\n    );\n};\n\n\nfunction randomString(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nfunction randomType() {\n    const words = [\"diagonal\", \"vertical\", \"horizontal\", \"radial\"];\n    return words[Math.floor(Math.random() * words.length)]\n}\n\n"]},"metadata":{},"sourceType":"module"}