{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/flask-react-blog/frontend/src/components/Auth/SignUp/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { API, setAuthHeaders } from \"../../../services/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, Input, message } from \"antd\";\nimport { NotLogged } from \"../../../views/NotLogged\";\nimport './layout.css';\nimport { registerFormLayout } from \"./layout\";\nimport { login } from \"../../../services/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUp = () => {\n  _s();\n\n  const history = useHistory();\n  let passwd;\n\n  const onFinish = values => {\n    API.post('/auth/sign-up', values).then(response => {\n      API.post('/auth/login', {\n        email: values.email,\n        password: values.password\n      }).then(response => {\n        login(response.data['Bearer token']);\n        history.push('/home');\n      });\n      localStorage.setItem('token', response.data.token);\n      setAuthHeaders(response.data.token);\n      history.push('/login');\n    }).catch(errInfo => {\n      message.error(`Cannot register the user: `);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(NotLogged, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title\",\n        children: \"Sign-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"login\",\n        onFinish: onFinish,\n        labelCol: {\n          span: 6\n        },\n        wrapperCol: {\n          span: 16\n        },\n        ...registerFormLayout,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          className: \"form-item\",\n          name: \"email\",\n          label: \"E-mail\",\n          rules: [{\n            required: true,\n            type: \"email\",\n            message: 'The input is not valid e-mail!'\n          }, {\n            required: true,\n            message: 'Please input your e-mail!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          className: \"form-item\",\n          name: \"password\",\n          label: \"Password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          hasFeedback: true,\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          className: \"form-item\",\n          name: \"confirm\",\n          label: \"Confirm Password\",\n          dependencies: ['password'],\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: 'Please confirm your password!'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('The two passwords that you entered do not match!');\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          className: \"form-item\",\n          name: \"username\",\n          label: \"Username\",\n          rules: [{\n            required: true,\n            message: 'The input is not valid Username!'\n          }, {\n            required: true,\n            message: 'Please input your Username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            className: \"sign-up-form-button\",\n            children: \"Sign-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/marcin/Desktop/flask-react-blog/frontend/src/components/Auth/SignUp/SignUp.js"],"names":["React","API","setAuthHeaders","useHistory","Button","Form","Input","message","NotLogged","registerFormLayout","login","SignUp","history","passwd","onFinish","values","post","then","response","email","password","data","push","localStorage","setItem","token","catch","errInfo","error","span","required","type","getFieldValue","validator","rule","value","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {API, setAuthHeaders} from \"../../../services/api\";\nimport {useHistory} from \"react-router-dom\";\nimport {Button, Form, Input, message} from \"antd\";\nimport {NotLogged} from \"../../../views/NotLogged\";\n\nimport './layout.css'\nimport {registerFormLayout} from \"./layout\";\nimport {login} from \"../../../services/user\";\n\nexport const SignUp = () => {\n    const history = useHistory();\n    let passwd;\n\n    const onFinish = values => {\n        API.post('/auth/sign-up', values)\n            .then((response => {\n                API.post('/auth/login', {\n                    email: values.email,\n                    password: values.password,\n                })\n                    .then((response => {\n                        login(response.data['Bearer token']);\n                        history.push('/home')\n                    }))\n\n                localStorage.setItem('token', response.data.token)\n                setAuthHeaders(response.data.token);\n                history.push('/login')\n            }))\n            .catch((errInfo) => {\n                message.error(`Cannot register the user: `);\n            })\n    };\n\n    return (\n        <NotLogged>\n            <div className=\"register-container\" >\n                <div className=\"form-title\">\n                    Sign-up\n                </div>\n                <Form\n                    name=\"login\"\n                    onFinish={onFinish}\n                    labelCol={{ span: 6 }}\n                    wrapperCol={{ span: 16 }}\n                    {...registerFormLayout}\n                >\n                    <Form.Item\n                        className='form-item'\n                        name=\"email\"\n                        label=\"E-mail\"\n                        rules={[\n                            {\n                                required: true,\n                                type: \"email\",\n                                message: 'The input is not valid e-mail!',\n                            },\n                            {\n                                required: true,\n                                message: 'Please input your e-mail!',\n                            },\n                        ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item\n                        className='form-item'\n                        name=\"password\"\n                        label=\"Password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                        hasFeedback\n                    >\n                        <Input.Password/>\n                    </Form.Item>\n\n                    <Form.Item\n                        className=\"form-item\"\n                        name=\"confirm\"\n                        label=\"Confirm Password\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({getFieldValue}) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('The two passwords that you entered do not match!');\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password/>\n                    </Form.Item>\n                    <Form.Item\n                        className='form-item'\n                        name=\"username\"\n                        label=\"Username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'The input is not valid Username!',\n                            },\n                            {\n                                required: true,\n                                message: 'Please input your Username!',\n                            },\n                        ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"sign-up-form-button\" >\n                            Sign-up\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </NotLogged>\n    )\n}"]},"metadata":{},"sourceType":"module"}